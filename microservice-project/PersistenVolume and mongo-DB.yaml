# we want to attach one folder inside the contianer to outside the contianer so we use volumen mount. 

apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb
spec:
  # modify replicas according to your case
  minReadySeconds: 30 # How much time after pod has been created we show it in a ready state. I.e after 30 seconds when pod create it come into ready state. 
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
      - name: mongodb
        image: mongo:3.6.5-jessie
        volumeMounts:
           - name: mongo-persistent-storage
             mounthPath: /data/db (inside the contianer which needs to be mount)

        volume:                       # alll the volume we have above 
            - name: mongo-persistent-storage
              hostpath:                virtual machine path        # we have hardcoded the path here. SO we havalso do a pointer to this configuration to how we want to mount So seprate file main. 
                 path: /mnt/some/directory/structure
                 tyep: DirectoryORCreate

---
# what do we want 
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongo-pvc
spec:
   storageClassName: mylocalstorage    (it will be used for check the volume to claim)
   accessModes:
       - ReadWriteOnce
   resources:            We need sto request some resources of type storage and size is 20gb 
      requests: 
         Storage: 20Gi
# access modes if needs to be added. 
ReadWriteOnce ---- the volume can be mounted as read-write bt single node
ReadWriteMany----- the volume can be mounted as read-write by many nodes
ReadOnlyMany----volume has been mounted as readonly by many nodes.




---
How we want to implement it 
apiVersion: v1
kind: PersistentVolume
metadata:
  name: local-storage
spec: 
   storageClassName: mylocalstorage
   capacity:
       storage: 100Gi (20 gigabite to our directory structure. )
   accessModes:
      - ReadWriteOnce      (only for single node has this ebs for aws)   
   hostpath: 
     path: /mnt/some /directory/dtructure" 
     type: DirectoryOrCreate

---- now binding between persistance volume  and claim. So we need StorageClass. 




                 
             
       

___


apiVersion: v1
kind: Service
metadata:
  name: fleetman-mongodb
spec:
  selector:
     #THis defines which services are going to be represented by this service 
     # THis service becomes a network end point for either other services
     #Or may be external user like browser.  
    app: mongodb
  ports:
    - name: mongoport
      protocol: TCP
      port: 27017
      #target port is contianer port, Port is service port mostly same both part This is clusterIP  service Means only inside the cluster not webbrowser. 
      #But our is webapp so we need NodePort service. NOdeport is 30000 to 327000
  type: ClusterIP

